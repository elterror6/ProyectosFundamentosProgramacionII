package OptionalFunctions;

import java.util.Scanner;

import Catalogo.Catalogo;
import JuegoRol.Combate;
import JuegoRol.Guerrero;
import JuegoRol.Mago;
import JuegoRol.Personaje;

public class Main {

	@SuppressWarnings("unlikely-arg-type")
	public static void main(String[] args) {
		Personaje[] c = {};
		Personaje[] pjs = addCharacter(c); 
		
		Catalogo<Personaje> cat = new Catalogo<Personaje>(c);
		
		for (int i = 0; i < pjs.length; i++) {
			for (int i = 0; i < cat.getSize(); i++) {
				
			}
			if (cat.equals(pjs[i])) {
				System.out.println("El personaje "+ pjs[i].getNombre() +" esta en el catálogo.\nStats:\n\t"+pjs[i]+"\n");
			} else {
				System.out.println("El personaje "+pjs[i].getNombre()+" no esta en el catálogo.\n");
				
			}
		}
		
		boolean end = false;
		do {
			end = torneo(pjs);
		} while (!end) ;
		
	}
	
	public static boolean torneo(Personaje[] personajes) {
		Personaje[] personajes_vivos;
		Combate combate;
		int n=0;
		boolean end = false;
		for (Personaje personaje : personajes) {
			if (itsAlive(personaje)) {
				n++;
			}
		}
		personajes_vivos = new Personaje[n];
		int iteration = 0;
		for (Personaje personaje : personajes) {
			if (itsAlive(personaje)) {
				personajes_vivos[iteration] = personaje;
				iteration++;
			}
		}
		if (personajes_vivos.length > 1) {
			for (int i = 0 ; i < personajes_vivos.length ; i+=2) {
				combate = new Combate(personajes_vivos[i],personajes_vivos[i+1]);
				combate.ronda();
			}
		} else {
			end = true;
			System.out.println("El campeón del torneo es: "+personajes_vivos[0].getNombre());
		}
		return end;
	}
	
	public static boolean itsAlive(Personaje personaje) {
		boolean itsalive = false;
		if (personaje.getPV()>0) {
			itsalive = true;
		}
		return itsalive;
	}
	
	public static Personaje[] addCharacter(Personaje[] cat) {
		Scanner sc = new Scanner(System.in);
		Personaje p;
		Personaje[] pjs;
		Personaje[] aux_cat = {};
		cat = aux_cat;
		String type, name, ans;
		int fa, lv, n;
		
		do {
			System.out.println("¿Cuántos personajes se van a crear? (Número par)");
			n = sc.nextInt();
		} while (n%2!=0);
		pjs = new Personaje[n];
		
		for (int i = 0; i < pjs.length; i++) {
			sc.nextLine();
			System.out.println("Nombre del personaje: ");
			name = sc.nextLine();
			System.out.println("Nivel del personaje: ");
			lv = sc.nextInt();
			sc.nextLine();
			System.out.println("¿Qué tipo de personaje quieres crear?: ");
			type = sc.nextLine();
			
			switch (type) {
				case "Guerrero":
					Personaje[] aux0 = new Personaje[cat.length + 1];
					for (int x = 0; x < cat.length; x++) {
						aux0[x]=cat[x];
					}
					System.out.println("Fuerza del personaje: ");
					fa = sc.nextInt();
					sc.nextLine();
					p = new Guerrero(name,lv,fa);
					System.out.println("¿Desea añadirlo al catalogo? ");
					ans = sc.nextLine();
					switch (ans) {
						case "Si","S","si","s","Yes","Y","yes","y":
							aux0[cat.length] = p;
							cat = aux0;
							System.out.println("Personaje añadido al catálogo.");
							break;
						case "No","N","no","n":
							break;
					}
					pjs[i] = p;
					break;
				case "Mago":
					Personaje[] aux1 = new Personaje[cat.length + 1];
					for (int x = 0; x < cat.length; x++) {
						aux1[x]=cat[x];
					}
					System.out.println("Agilidad del personaje: ");
					fa = sc.nextInt();
					sc.nextLine();
					p = new Mago(name,lv,fa);
					System.out.println("¿Desea añadirlo al catalogo? ");
					ans = sc.nextLine();
					switch (ans) {
						case "Si","S","si","s","Yes","Y","yes","y":
							aux1[cat.length] = p;
							cat = aux1;
							System.out.println("Personaje añadido al catálogo.");
							break;
						case "No","N","no","n":
							break;
					}
					pjs[i] = p;
					break;
			}
		}
		sc.close();
		return pjs;
	}
}
